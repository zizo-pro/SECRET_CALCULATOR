# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'dataconv.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_Form(object):
    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(440, 316)
        font = QtGui.QFont()
        font.setPointSize(17)
        Form.setFont(font)
        self.widget = QtWidgets.QWidget(Form)
        self.widget.setGeometry(QtCore.QRect(10, 44, 401, 111))
        self.widget.setObjectName("widget")
        self.dataconv_covfrominput = QtWidgets.QDoubleSpinBox(self.widget)
        self.dataconv_covfrominput.setGeometry(QtCore.QRect(0, 40, 231, 41))
        self.dataconv_covfrominput.setObjectName("dataconv_covfrominput")
        self.dataconv_covfrombox = QtWidgets.QComboBox(self.widget)
        self.dataconv_covfrombox.setGeometry(QtCore.QRect(270, 40, 121, 41))
        self.dataconv_covfrombox.setObjectName("dataconv_covfrombox")
        self.dataconv_covfrombox.addItem("")
        self.dataconv_covfrombox.addItem("")
        self.dataconv_covfrombox.addItem("")
        self.dataconv_covfrombox.addItem("")
        self.dataconv_covfrombox.addItem("")
        self.dataconv_covfrombox.addItem("")
        self.dataconv_covfrombox.addItem("")
        self.dataconv_covfrombox.addItem("")
        self.dataconv_covfrombox.addItem("")
        self.dataconv_covfrombox.addItem("")
        self.label = QtWidgets.QLabel(self.widget)
        self.label.setGeometry(QtCore.QRect(0, 10, 151, 19))
        font = QtGui.QFont()
        font.setPointSize(16)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.comboBox_2 = QtWidgets.QComboBox(self.widget)
        self.comboBox_2.setGeometry(QtCore.QRect(270, 180, 121, 41))
        self.comboBox_2.setObjectName("comboBox_2")
        self.comboBox_2.addItem("")
        self.comboBox_2.addItem("")
        self.comboBox_2.addItem("")
        self.comboBox_2.addItem("")
        self.comboBox_2.addItem("")
        self.comboBox_2.addItem("")
        self.comboBox_2.addItem("")
        self.comboBox_2.addItem("")
        self.comboBox_2.addItem("")
        self.comboBox_2.addItem("")
        self.widget_2 = QtWidgets.QWidget(Form)
        self.widget_2.setGeometry(QtCore.QRect(10, 184, 401, 111))
        self.widget_2.setObjectName("widget_2")
        self.label_2 = QtWidgets.QLabel(self.widget_2)
        self.label_2.setGeometry(QtCore.QRect(0, 10, 151, 19))
        font = QtGui.QFont()
        font.setPointSize(16)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.dataconv_covtooutput = QtWidgets.QLabel(self.widget_2)
        self.dataconv_covtooutput.setGeometry(QtCore.QRect(0, 40, 231, 41))
        self.dataconv_covtooutput.setStyleSheet("background-color: rgb(39, 42, 52);\n"
"border-color: rgb(25, 26, 33);\n"
"border: 1px solid rgb(25, 26, 33);")
        self.dataconv_covtooutput.setObjectName("dataconv_covtooutput")
        self.dataconv_covtobox = QtWidgets.QComboBox(self.widget_2)
        self.dataconv_covtobox.setGeometry(QtCore.QRect(270, 40, 121, 41))
        self.dataconv_covtobox.setObjectName("dataconv_covtobox")
        self.dataconv_covtobox.addItem("")
        self.dataconv_covtobox.addItem("")
        self.dataconv_covtobox.addItem("")
        self.dataconv_covtobox.addItem("")
        self.dataconv_covtobox.addItem("")
        self.dataconv_covtobox.addItem("")
        self.dataconv_covtobox.addItem("")
        self.dataconv_covtobox.addItem("")
        self.dataconv_covtobox.addItem("")
        self.dataconv_covtobox.addItem("")
        self.dataconv_convert = QtWidgets.QPushButton(Form)
        self.dataconv_convert.setGeometry(QtCore.QRect(130, 150, 141, 35))
        self.dataconv_convert.setFlat(True)
        self.dataconv_convert.setObjectName("dataconv_convert")
        self.pushButton = QtWidgets.QPushButton(Form)
        self.pushButton.setGeometry(QtCore.QRect(-40, 0, 131, 41))
        font = QtGui.QFont()
        font.setPointSize(30)
        self.pushButton.setFont(font)
        self.pushButton.setStyleSheet("color: rgb(112, 114, 118);")
        self.pushButton.setFlat(True)
        self.pushButton.setObjectName("pushButton")
        self.widget_2.raise_()
        self.widget.raise_()
        self.dataconv_convert.raise_()
        self.pushButton.raise_()
        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)

        self.dataconv_convert.clicked.connect(self.dataconv)






    def dataconv(self):
        
        convert_from = self.dataconv_covfrombox.currentText()
        convert_to =self.dataconv_covtobox.currentText()

        data_from = self.dataconv_covfrominput.value()

        if convert_from == "bit":
            if convert_to == "byte":
                result = data_from/8
                self.dataconv_covtooutput.setText(str(result))

            elif convert_to == "kilobit":
                result = data_from/1000
                self.dataconv_covtooutput.setText(str(result))

            elif convert_to == "kilobyte":
                result = data_from/8000
                self.dataconv_covtooutput.setText(str(result))

            elif convert_to == "megabit":
                result = data_from/1e+6
                self.dataconv_covtooutput.setText(str(result))

            elif convert_to == "megabyte":
                result = data_from/8e+6
                self.dataconv_covtooutput.setText(str(result))

            elif convert_to == "gigabit":
                result = data_from/1e+9
                self.dataconv_covtooutput.setText(str(result))

            elif convert_to == "gigabyte":
                result = data_from/8e+9
                self.dataconv_covtooutput.setText(str(result))

            elif convert_to == "terabit":
                result = data_from/1e+12
                self.dataconv_covtooutput.setText(str(result))

            elif convert_to == "terabyte":
                result = data_from/8e+12
                self.dataconv_covtooutput.setText(str(result))

            elif convert_to == "bit":
                self.dataconv_covtooutput.setText(str(data_from))

        elif convert_from == "byte":
            if convert_to == "bit":
                result = data_from*8
                self.dataconv_covtooutput.setText(str(result))

            elif convert_to == "kilobit":
                result = data_from/125
                self.dataconv_covtooutput.setText(str(result))

            elif convert_to == "kilobyte":
                result = data_from/1000
                self.dataconv_covtooutput.setText(str(result))

            elif convert_to == "megabit":
                result = data_from/125000
                self.dataconv_covtooutput.setText(str(result))

            elif convert_to == "megabyte":
                result = data_from/1e+6
                self.dataconv_covtooutput.setText(str(result))

            elif convert_to == "gigabit":
                result = data_from/1.25e+8
                self.dataconv_covtooutput.setText(str(result))

            elif convert_to == "gigabyte":
                result = data_from/1e+9
                self.dataconv_covtooutput.setText(str(result))

            elif convert_to == "terabit":
                result = data_from/1.25e+11
                self.dataconv_covtooutput.setText(str(result))

            elif convert_to == "terabyte":
                result = data_from/1e+12
                self.dataconv_covtooutput.setText(str(result))

            elif convert_to == "byte":
                self.dataconv_covtooutput.setText(str(data_from))

        elif convert_from == "kilobit":
            if convert_to == "bit":
                result = data_from*1000
                self.dataconv_covtooutput.setText(str(result))

            elif convert_to == "byte":
                result = data_from*125
                self.dataconv_covtooutput.setText(str(result))

            elif convert_to == "kilobyte":
                result = data_from/8
                self.dataconv_covtooutput.setText(str(result))

            elif convert_to == "megabit":
                result = data_from/1000
                self.dataconv_covtooutput.setText(str(result))

            elif convert_to == "megabyte":
                result = data_from/8000
                self.dataconv_covtooutput.setText(str(result))

            elif convert_to == "gigabit":
                result = data_from/1e+6
                self.dataconv_covtooutput.setText(str(result))

            elif convert_to == "gigabyte":
                result = data_from/8e+6
                self.dataconv_covtooutput.setText(str(result))

            elif convert_to == "terabit":
                result = data_from/1e+9
                self.dataconv_covtooutput.setText(str(result))

            elif convert_to == "terabyte":
                result = data_from/8e+9
                self.dataconv_covtooutput.setText(str(result))

            elif convert_to == "kilobit":
                self.dataconv_covtooutput.setText(str(data_from))

        elif convert_from == "kilobyte":
            if convert_to == "bit":
                result = data_from*8000
                self.dataconv_covtooutput.setText(str(result))

            elif convert_to == "byte":
                result = data_from*1000
                self.dataconv_covtooutput.setText(str(result))

            elif convert_to == "kilobit":
                result = data_from*8
                self.dataconv_covtooutput.setText(str(result))

            elif convert_to == "megabit":
                result = data_from/125
                self.dataconv_covtooutput.setText(str(result))

            elif convert_to == "megabyte":
                result = data_from/1000
                self.dataconv_covtooutput.setText(str(result))

            elif convert_to == "gigabit":
                result = data_from/125000
                self.dataconv_covtooutput.setText(str(result))

            elif convert_to == "gigabyte":
                result = data_from/1e+6
                self.dataconv_covtooutput.setText(str(result))

            elif convert_to == "terabit":
                result = data_from/1.25e+8
                self.dataconv_covtooutput.setText(str(result))

            elif convert_to == "terabyte":
                result = data_from/1e+9
                self.dataconv_covtooutput.setText(str(result))

            elif convert_to == "kilobyte":
                self.dataconv_covtooutput.setText(str(data_from))

        elif convert_from == "megabit":
            if convert_to == "bit":
                result = data_from*1e+6
                self.dataconv_covtooutput.setText(str(result))

            elif convert_to == "byte":
                result = data_from*125000
                self.dataconv_covtooutput.setText(str(result))

            elif convert_to == "kilobyte":
                result = data_from*125
                self.dataconv_covtooutput.setText(str(result))

            elif convert_to == "megabyte":
                result = data_from/8
                self.dataconv_covtooutput.setText(str(result))

            elif convert_to == "kilobit":
                result = data_from*1000
                self.dataconv_covtooutput.setText(str(result))

            elif convert_to == "gigabit":
                result = data_from/1000
                self.dataconv_covtooutput.setText(str(result))

            elif convert_to == "gigabyte":
                result = data_from/8000
                self.dataconv_covtooutput.setText(str(result))

            elif convert_to == "terabit":
                result = data_from/1e+6
                self.dataconv_covtooutput.setText(str(result))

            elif convert_to == "terabyte":
                result = data_from/8e+6
                self.dataconv_covtooutput.setText(str(result))

            elif convert_to == "megabit":
                self.dataconv_covtooutput.setText(str(data_from))

        elif convert_from == "megabyte":
            if convert_to == "bit":
                result = data_from*8e+6
                self.dataconv_covtooutput.setText(str(result))

            elif convert_to == "byte":
                result = data_from*1e+6
                self.dataconv_covtooutput.setText(str(result))

            elif convert_to == "kilobyte":
                result = data_from*1000
                self.dataconv_covtooutput.setText(str(result))

            elif convert_to == "megabit":
                result = data_from*8
                self.dataconv_covtooutput.setText(str(result))

            elif convert_to == "kilobit":
                result = data_from*8000
                self.dataconv_covtooutput.setText(str(result))

            elif convert_to == "gigabit":
                result = data_from/125
                self.dataconv_covtooutput.setText(str(result))

            elif convert_to == "gigabyte":
                result = data_from/1000
                self.dataconv_covtooutput.setText(str(result))

            elif convert_to == "terabit":
                result = data_from/125000
                self.dataconv_covtooutput.setText(str(result))

            elif convert_to == "terabyte":
                result = data_from/1e+6
                self.dataconv_covtooutput.setText(str(result))

            elif convert_to == "megabyte":
                self.dataconv_covtooutput.setText(str(data_from))

        elif convert_from == "gigabit":
            if convert_to == "bit":
                result = data_from*1e+9
                self.dataconv_covtooutput.setText(str(result))

            elif convert_to == "byte":
                result = data_from*1.25e+8
                self.dataconv_covtooutput.setText(str(result))

            elif convert_to == "kilobyte":
                result = data_from*125000
                self.dataconv_covtooutput.setText(str(result))

            elif convert_to == "megabyte":
                result = data_from*125
                self.dataconv_covtooutput.setText(str(result))

            elif convert_to == "kilobit":
                result = data_from*1e+6
                self.dataconv_covtooutput.setText(str(result))

            elif convert_to == "megabit":
                result = data_from*1000
                self.dataconv_covtooutput.setText(str(result))

            elif convert_to == "gigabyte":
                result = data_from/8
                self.dataconv_covtooutput.setText(str(result))

            elif convert_to == "terabit":
                result = data_from/1000
                self.dataconv_covtooutput.setText(str(result))

            elif convert_to == "terabyte":
                result = data_from/8000
                self.dataconv_covtooutput.setText(str(result))

            elif convert_to == "gigabit":
                self.dataconv_covtooutput.setText(str(data_from))

        elif convert_from == "gigabyte":
            if convert_to == "bit":
                result = data_from*8e+9
                self.dataconv_covtooutput.setText(str(result))

            elif convert_to == "byte":
                result = data_from*1e+9
                self.dataconv_covtooutput.setText(str(result))

            elif convert_to == "kilobyte":
                result = data_from*1e+6
                self.dataconv_covtooutput.setText(str(result))

            elif convert_to == "megabyte":
                result = data_from*1000
                self.dataconv_covtooutput.setText(str(result))

            elif convert_to == "kilobit":
                result = data_from*8e+6
                self.dataconv_covtooutput.setText(str(result))

            elif convert_to == "gigabit":
                result = data_from*8
                self.dataconv_covtooutput.setText(str(result))

            elif convert_to == "megabit":
                result = data_from*8000
                self.dataconv_covtooutput.setText(str(result))

            elif convert_to == "terabit":
                result = data_from/125
                self.dataconv_covtooutput.setText(str(result))

            elif convert_to == "terabyte":
                result = data_from/1000
                self.dataconv_covtooutput.setText(str(result))

            elif convert_to == "gigabyte":
                self.dataconv_covtooutput.setText(str(data_from))

        elif convert_from == "terabit":
            if convert_to == "bit":
                result = data_from*1e+12
                self.dataconv_covtooutput.setText(str(result))

            elif convert_to == "byte":
                result = data_from*1.25e+11
                self.dataconv_covtooutput.setText(str(result))

            elif convert_to == "kilobyte":
                result = data_from*1.25e+8
                self.dataconv_covtooutput.setText(str(result))

            elif convert_to == "megabyte":
                result = data_from*125000
                self.dataconv_covtooutput.setText(str(result))

            elif convert_to == "kilobit":
                result = data_from*1e+9
                self.dataconv_covtooutput.setText(str(result))

            elif convert_to == "gigabit":
                result = data_from*1000
                self.dataconv_covtooutput.setText(str(result))

            elif convert_to == "gigabyte":
                result = data_from*125
                self.dataconv_covtooutput.setText(str(result))

            elif convert_to == "megabit":
                result = data_from*1e+6
                self.dataconv_covtooutput.setText(str(result))

            elif convert_to == "terabyte":
                result = data_from/8
                self.dataconv_covtooutput.setText(str(result))

            elif convert_to == "terabit":
                self.dataconv_covtooutput.setText(str(data_from))

        elif convert_from == "terabyte":
            if convert_to == "bit":
                result = data_from*8e+12
                self.dataconv_covtooutput.setText(str(result))

            elif convert_to == "byte":
                result = data_from*1e+12
                self.dataconv_covtooutput.setText(str(result))

            elif convert_to == "kilobyte":
                result = data_from*1e+9
                self.dataconv_covtooutput.setText(str(result))

            elif convert_to == "megabyte":
                result = data_from*1e+6
                self.dataconv_covtooutput.setText(str(result))

            elif convert_to == "kilobit":
                result = data_from*8e+9
                self.dataconv_covtooutput.setText(str(result))

            elif convert_to == "gigabit":
                result = data_from*8000
                self.dataconv_covtooutput.setText(str(result))

            elif convert_to == "gigabyte":
                result = data_from*1000
                self.dataconv_covtooutput.setText(str(result))

            elif convert_to == "terabit":
                result = data_from*8
                self.dataconv_covtooutput.setText(str(result))

            elif convert_to == "megabit":
                result = data_from*8e+6
                self.dataconv_covtooutput.setText(str(result))

            elif convert_to == "terabyte":
                self.dataconv_covtooutput.setText(str(data_from))

    
    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("data convertor", "data convertor"))
        self.dataconv_covfrombox.setItemText(0, _translate("Form", "bit"))
        self.dataconv_covfrombox.setItemText(1, _translate("Form", "byte"))
        self.dataconv_covfrombox.setItemText(2, _translate("Form", "kilobit"))
        self.dataconv_covfrombox.setItemText(3, _translate("Form", "kilobyte"))
        self.dataconv_covfrombox.setItemText(4, _translate("Form", "megabit"))
        self.dataconv_covfrombox.setItemText(5, _translate("Form", "megabyte"))
        self.dataconv_covfrombox.setItemText(6, _translate("Form", "gigabit"))
        self.dataconv_covfrombox.setItemText(7, _translate("Form", "gigabyte"))
        self.dataconv_covfrombox.setItemText(8, _translate("Form", "terabit"))
        self.dataconv_covfrombox.setItemText(9, _translate("Form", "terabyte"))
        self.label.setText(_translate("Form", "Convert From"))
        self.comboBox_2.setItemText(0, _translate("Form", "bit"))
        self.comboBox_2.setItemText(1, _translate("Form", "byte"))
        self.comboBox_2.setItemText(2, _translate("Form", "kilobit"))
        self.comboBox_2.setItemText(3, _translate("Form", "kilobyte"))
        self.comboBox_2.setItemText(4, _translate("Form", "megabit"))
        self.comboBox_2.setItemText(5, _translate("Form", "megabyte"))
        self.comboBox_2.setItemText(6, _translate("Form", "gigabit"))
        self.comboBox_2.setItemText(7, _translate("Form", "gigabyte"))
        self.comboBox_2.setItemText(8, _translate("Form", "terabit"))
        self.comboBox_2.setItemText(9, _translate("Form", "terabyte"))
        self.label_2.setText(_translate("Form", "Convert To"))
        self.dataconv_covtooutput.setText(_translate("Form", "0.00"))
        self.dataconv_covtobox.setItemText(0, _translate("Form", "bit"))
        self.dataconv_covtobox.setItemText(1, _translate("Form", "byte"))
        self.dataconv_covtobox.setItemText(2, _translate("Form", "kilobit"))
        self.dataconv_covtobox.setItemText(3, _translate("Form", "kilobyte"))
        self.dataconv_covtobox.setItemText(4, _translate("Form", "megabit"))
        self.dataconv_covtobox.setItemText(5, _translate("Form", "megabyte"))
        self.dataconv_covtobox.setItemText(6, _translate("Form", "gigabit"))
        self.dataconv_covtobox.setItemText(7, _translate("Form", "gigabyte"))
        self.dataconv_covtobox.setItemText(8, _translate("Form", "terabit"))
        self.dataconv_covtobox.setItemText(9, _translate("Form", "terabyte"))
        self.dataconv_convert.setText(_translate("Form", "Convert"))
        self.pushButton.setText(_translate("Form", "←"))
